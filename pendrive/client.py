import socket
import tqdm
import os
import os
import time

def send_file(fname):
    SEPARATOR = "<SEPARATOR>"
    BUFFER_SIZE = 4096 # send 4096 bytes each time step

    # the ip address or hostname of the server, the receiver
    host = "149.28.194.138"#"172.27.16.74"
    # the port, let's use 5001
    port = 5000
    # the name of file we want to send, make sure it exists
    filename = "malware/"+fname
    # get the file size
    filesize = os.path.getsize(filename)

    # create the client socket
    s = socket.socket()

    print(f"[+] Connecting to {host}:{port}")
    s.connect((host, port))
    print("[+] Connected.")

    # send the filename and filesize
    s.send(f"{filename}{SEPARATOR}{filesize}".encode())

    # start sending the file
    progress = tqdm.tqdm(range(filesize), f"Sending {filename}", unit="B", unit_scale=True, unit_divisor=1024)
    with open(filename, "rb") as f:
        while True:
            # read the bytes from the file
            bytes_read = f.read(BUFFER_SIZE)
            if not bytes_read:
                # file transmitting is done
                break
            # we use sendall to assure transimission in 
            # busy networks
            s.sendall(bytes_read)
            # update the progress bar
            progress.update(len(bytes_read))
    # close the socket
    
    s.close()

old= []
while True:
    print("Client has been re-started: ")
    new = os.listdir('malware')
    print(new)
    for file in new:
        if file not in old:
            old.append(file)

            x= file.split(".")
            #if x[-1]=="exe" or x[-1]=="h":
            time.sleep(4)
            send_file(file)
    time.sleep(10)




